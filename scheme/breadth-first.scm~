#lang racket

(define graph
  (let 
    ((a (cons #\a '(b c)))
     (b (cons #\b '(c)))
     (c (cons #\c '())))
    (list a b c)))

(define (breadth-first node)
  (begin
   (display (car node))
   (newline)
   (for-each (lambda (x)
                 (breadth-first x)(newline)) 
             (cdr node))))
   

(breadth-first graph)
  


    